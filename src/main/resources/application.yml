server:
  port: 8099

spring:
  application:
    name: batch-template
  datasource:
    url: jdbc:mysql://localhost:33063/testdb?serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowMultiQueries=true
    username: root
    password: rootpass
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      pool-name: BatchHikariCP
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 600000         # 10분
      max-lifetime: 1800000        # 30분
      connection-timeout: 30000    # 30초
      auto-commit: true

  batch:
    job:
      enabled: false # 등록된 JOB 실행 여부 (false일 경우 quartz와 같은 도구 활용해 실행)
    jdbc:
      initialize-schema: always  # or embedded, never, on
      isolation-level-for-create: default
  #      table-prefix: CUSTOM_

  quartz:
    job-store-type: jdbc  # memory, jdbc
    scheduler-name: BatchQuartzScheduler
    wait-for-jobs-to-complete-on-shutdown: true
    overwrite-existing-jobs: true
    jdbc:
      initialize-schema: always
  #    jdbc:
  #      comment-prefix:

  jpa:
    hibernate:
      ddl-auto: create       # create, create-drop, update, validate, none
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.MySQL8Dialect
        highlight_sql: false  # Hibernate 6 ???

management:
  endpoints:
    web:
      exposure:
        include: health,metrics

# swagger
springdoc:
  packages-to-scan: com.kjung.batchtemplate.api
  paths-to-match: /api/**
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: method
    info:
      enabled: true
      title: Spring Batch Template
      description: Spring Batch + Quartz Template
      version: 1.0.0
      contact:
        name: KIM JUNG HYEON
        email: dev.kjung@gmail.com
      license:
        name: Apache 2.0
        url: https://www.apache.org/licenses/LICENSE-2.0.html
      jwt-header-enabled: false
